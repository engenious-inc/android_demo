pipeline {
    triggers {
        githubPush()
    }
    agent none
    stages {
        stage('Run ktlint') {
            agent {
                docker {
                    image 'mingc/android-build-box:1.28.0'
                    args '-u root:root'
                 }
             }
            steps {
                sh './gradlew clean ktlint'
            }
        }
        stage('Run unit tests') {
            agent {
                docker {
                    image 'mingc/android-build-box:1.28.0'
                    args '-u root:root'
                }
            }
            steps {
                sh './gradlew clean testDebugUnitTest'
            }
        }
        stage('Build apks') {
            agent {
                docker {
                    image 'mingc/android-build-box:1.28.0'
                    args '-u root:root'
                }
            }
            steps {
                sh './gradlew :app:assembleDebug :app:assembleDebugAndroidTest'
                stash includes: 'app/build/outputs/apk/debug/app-debug.apk', name: 'appDebug'
                stash includes: 'app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk', name: 'appTest'
            }
        }
        stage('Run UI Espresso tests') {
            agent any
            environment {
                MARATHON_API_KEY = credentials('marathon-api-key')
            }
            steps {


                sh '''
                    docker pull marathonlabs/marathon-cloud:latest
                    alias marathon-cloud='docker run -v "$(pwd)":/work --rm marathonlabs/marathon-cloud:latest'
                    marathon-cloud run android --application app/build/outputs/apk/debug/app-debug.apk --test-application app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk --api-key $MARATHON_API_KEY
                '''
            }
        }
    }
}
